for var = 1:3
    image_real = double(imread(['2H_400kHz_' num2str(2^var*100) 'u_realpart.tif']));
    image_imag = double(imread(['2H_400kHz_' num2str(2^var*100) 'u_imagpart.tif']));
    
%     image_real = double(imread(buf_real));
%     image_imag = double(imread(bur_imag));

%     image_real = double(buf_real);
%     image_imag = double(buf_imag);

    
    image_complex = image_real + j*image_imag;
    
    figure()
    mesh(image_real);
    title(['2H 400kHz ' num2str(2^var*100) 'µm Realpart']);
    
    figure()
    mesh(image_imag);
    title(['2H 400kHz ' num2str(2^var*100) 'µm Imagpart']);
    
    figure()
    mesh(abs(image_complex));
    title(['2H 400kHz ' num2str(2^var*100) 'µm Module']);
    
    figure()
    mesh(angle(image_complex));
    title(['2H 400kHz ' num2str(2^var*100) 'µm Phase']);
end

% Image Processing: delta_max calculation
% Fissure depth = 400µm and 800µm

%=========== 200µm =========================
%-- Original matrix size (81,25)
% ----- Cut: 10 first lines, 10 last lines -------
% ----- Cut: 3 first columns, 1 last column ----
for var = 1:1
    image_real = double(imread(['2H_400kHz_' num2str(2^var*100) 'u_realpart.tif']));
    image_imag = double(imread(['2H_400kHz_' num2str(2^var*100) 'u_imagpart.tif']));
    
    image_complex = image_real + j*image_imag;
    
    image_module = abs(image_complex);
    image_size =size(image_module);

% Calculation of image background:
line_top = zeros(1,image_size(2)-4);
line_bottom = line_top;

    for col = 4:image_size(2)-1
        for line = 11:25
            line_top(:,col-3) = line_top(:,col-3)+ image_module(line,col);
        end
        
        for line = image_size(1)-24:image_size(1)-10
            line_bottom(:,col-3) = line_bottom(:,col-3) + image_module(line,col);
        end
        
    end
    
    line_top = line_top/15;
    line_bottom = line_bottom/15;
    line_average = 0.5*(line_top+line_bottom);

% Lap ma tran anh nen:

    for line = 1:image_size(1)-20
        image_ground(line,:) = line_average;
    end

% Hieu chinh kich thuoc anh cu cho phu hop voi anh nen:
    for line = 1:image_size(1)-20
        for col = 4:image_size(2)-1
            image_corr(line,col-3) = image_module(line+10,col);
        end
    end

% Ma tran anh bo nen:
%     image_sub =  image_ground - image_corr;
    image_sub =  abs(image_ground - image_corr);
    figure()
    mesh(image_sub);
    title(['2H 400kHz ' num2str(2^var*100) 'µm -- Subtracted Module']);

% Tim gia tri lon nhat so voi nen va toa do cua diem anh tuong ung:
    im_corr_size = size(image_corr);

    delta_max = (image_sub(1,1));
    max_lin = 1;
    max_col = 1;

    for line = 1:im_corr_size(1)
        for col = 1:im_corr_size(2)
            if image_sub(line,col) - delta_max > 0
                delta_max = image_sub(line,col);
                max_lin = line;
                max_col = col;
            end
        end
    end

    
    
    disp(['2H 400kHz ' num2str(2^var*100) 'µm'])
    disp(['delta_max = ' num2str(delta_max)])
%     delta_max
    disp('Position of the max point in the new cordinate:')
    disp(['Line = ' num2str(max_lin) '   Col = ' num2str(max_col)])
%     max_lin
%     max_col
    
    disp('Position of the max point in the original cordinate:')
    disp(['Line = ' num2str(max_lin + 10) '   Col = ' num2str(max_col + 3)])
    disp('')
%     max_lin + 3
%     max_col + 19
end

%=========== 400µm   and  800µm ============ 
%---- Cut: 19 first columns, 1 last column ----
%---- Cut: 3 first lines, 3 last lines     ----
for var = 2:3
    image_real = double(imread(['2H_400kHz_' num2str(2^var*100) 'u_realpart.tif']));
    image_imag = double(imread(['2H_400kHz_' num2str(2^var*100) 'u_imagpart.tif']));
    
    image_complex = image_real + j*image_imag;
    
    image_module = abs(image_complex);
    image_size =size(image_module);

% Calculation of image background:
line_top = zeros(1,image_size(2)-20);
line_bottom = line_top;

    for col = 20:image_size(2)-1
        for line = 4:15
            line_top(:,col-19) = line_top(:,col-19)+ image_module(line,col);
        end
        
        for line = image_size(1)-14:image_size(1)-3
            line_bottom(:,col-19) = line_bottom(:,col-19) + image_module(line,col);
        end
        
    end
    
    line_top = line_top/12;
    line_bottom = line_bottom/12;
    line_average1 = 0.5*(line_top+line_bottom);

% Lap ma tran anh nen:

    for line = 1:image_size(1)-6
        image_ground1(line,:) = line_average1;
    end

% Hieu chinh kich thuoc anh cu cho phu hop voi anh nen:
    for line = 1:image_size(1)-6
        for col = 20:image_size(2)-1
            image_corr1(line,col-19) = image_module(line+3,col);
        end
    end

% Ma tran anh bo nen:
%     image_sub1 =  image_ground1 - image_corr1;
    image_sub1 =  abs(image_ground1 - image_corr1);
    figure()
    mesh(image_sub1);
    title(['2H 400kHz ' num2str(2^var*100) 'µm -- Subtracted Module']);

% Tim gia tri lon nhat so voi nen va toa do cua diem anh tuong ung:
    im_corr_size = size(image_corr1);

    delta_max = (image_sub1(1,1));
    max_lin = 1;
    max_col = 1;

    for line = 1:im_corr_size(1)
        for col = 1:im_corr_size(2)
            if image_sub1(line,col) - delta_max > 0
                delta_max = image_sub1(line,col);
                max_lin = line;
                max_col = col;
            end
        end
    end
% Chay dung se cho gia tri delta_max = 4
% Toa do cua gia tri max la (3,4)
    
    disp(['2H 400kHz ' num2str(2^var*100) 'µm'])
    disp(['delta_max = ' num2str(delta_max)])
%     delta_max
    disp('Position of the max point in the new cordinate:')
    disp(['Line = ' num2str(max_lin) '   Col = ' num2str(max_col)])
%     max_lin
%     max_col
    
    disp('Position of the max point in the original cordinate:')
    disp(['Line = ' num2str(max_lin + 3) '   Col = ' num2str(max_col + 19)])
    disp('')
%     max_lin + 3
%     max_col + 19
end
